name: backend-unit-tests
on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 24.3.0

      - name: Install Node dependencies
        run: npm ci

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Python dependencies
        run: |
          cd backend
          poetry config virtualenvs.in-project true
          poetry install

      - name: Run backend tests with coverage
        id: coverage
        run: |
          cd backend
          poetry run coverage run -m pytest
          
          # Generate a nice coverage report
          echo "🧪 Running Python tests with coverage..."
          
          # Get coverage percentage (extract from the TOTAL line)
          COVERAGE_PERCENT=$(poetry run coverage report | grep "TOTAL" | awk '{print $4}' | sed 's/%//')
          
          # Get detailed report
          COVERAGE_REPORT=$(poetry run coverage report --show-missing)
          
          # Create summary with emoji based on coverage
          if [ "$COVERAGE_PERCENT" -ge 90 ]; then
            COVERAGE_EMOJI="🟢"
            COVERAGE_STATUS="Right on the target!"
          elif [ "$COVERAGE_PERCENT" -ge 70 ]; then
            COVERAGE_EMOJI="🟡"
            COVERAGE_STATUS="Almost There"
          else
            COVERAGE_EMOJI="🔴"
            COVERAGE_STATUS="Needs Improvement"
          fi
          
          echo "COVERAGE_PERCENT=$COVERAGE_PERCENT" >> $GITHUB_OUTPUT
          echo "COVERAGE_EMOJI=$COVERAGE_EMOJI" >> $GITHUB_OUTPUT
          echo "COVERAGE_STATUS=$COVERAGE_STATUS" >> $GITHUB_OUTPUT
          echo "COVERAGE_REPORT<<EOF" >> $GITHUB_OUTPUT
          echo "$COVERAGE_REPORT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          CI: true

      - name: Comment coverage report
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          message: |
            ## 🐍 Backend Test Coverage Report
            
            ### ${{ steps.coverage.outputs.COVERAGE_EMOJI }} Overall Coverage: **${{ steps.coverage.outputs.COVERAGE_PERCENT }}%** (${{ steps.coverage.outputs.COVERAGE_STATUS }})
            
            <details>
            <summary>📋 Click to view detailed coverage report</summary>
            
            ```
            ${{ steps.coverage.outputs.COVERAGE_REPORT }}
            ```
            
            </details>
            
            ### Coverage Legend
            - 🟢 **Target** (≥90%) - Great job! 
            - 🟡 **Almost There** (≥70%) - Just a bit more testing
            - 🔴 **Needs Improvement** (<70%) - Consider adding more tests
            
            ---
            *🤖 Generated by backend-unit-tests workflow*